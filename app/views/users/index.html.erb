
<%= button_to "ログアウト", destroy_user_session_path, method: :delete, data: { confirm: "本当にログアウトしますか？" }, class: "btn btn-danger" %>
<style>
    .tile {
        width: 70px;
        height: 70px;
        border: 1px solid red;
        border-radius: 10px;
        text-align: center;
        font-size: 36px;
        background-color: white;
        box-shadow: rgb(128, 128, 128) 5px 5px;
    }
</style>
<%= link_to "new", users_new_path %>
<table id="table"></table>

<script>
"use strict";
const tiles = [];

function init() {
  let table = document.getElementById("table");

  for (let i = 0; i < 4; i++) {
    let tr = document.createElement("tr");
    for (let j = 0; j < 4; j++) {
      let td = document.createElement("td");
      let index = i * 4 + j;
      td.className = "tile";
      td.index = index;
      td.value = index;
      td.textContent = index === 0 ? "" : index;
      td.onclick = click;
      tr.appendChild(td);
      tiles.push(td);
    }
    table.appendChild(tr);
  }
  shuffleTiles();
}

function click(e) {
  let i = e.target.index;
  if (i - 4 >= 0 && tiles[i - 4].value === 0) {
    swap(i, i - 4);
  } else if (i + 4 < 16 && tiles[i + 4].value === 0) {
    swap(i, i + 4);
  } else if (i % 4 !== 0 && tiles[i - 1].value === 0) {
    swap(i, i - 1);
  } else if (i % 4 !== 3 && tiles[i + 1].value === 0) {
    swap(i, i + 1);
  }
}

function swap(i, j) {
  let tmp = tiles[i].value;
  tiles[i].textContent = tiles[j].textContent;
  tiles[i].value = tiles[j].value;
  tiles[j].textContent = tmp;
  tiles[j].value = tmp;
}

function shuffleTiles() {
  let values = [...Array(16).keys()];
  do {
    shuffleArray(values);
  } while (!isSolvable(values));

  for (let i = 0; i < tiles.length; i++) {
    tiles[i].value = values[i];
    tiles[i].textContent = values[i] === 0 ? "" : values[i];
  }
}

function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    let j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

function isSolvable(array) {
  let inversions = 0;
  for (let i = 0; i < array.length; i++) {
    for (let j = i + 1; j < array.length; j++) {
      if (array[i] > array[j] && array[i] !== 0 && array[j] !== 0) {
        inversions++;
      }
    }
  }

  let emptyRow = Math.floor(array.indexOf(0) / 4);

  return (inversions % 2 === 0) === (emptyRow % 2 === 1);
}

window.onload = init;
</script>
